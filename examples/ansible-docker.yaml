hooks:
  cleanup:
    script: |
      {% raw %}
      ID=$(docker ps -a --filter="label=pipeline=${PIPELINE_PID}" --format="{{.ID}}")
      {% endraw %}
      echo "Stopped container: $(docker stop ${ID})"

model:
  packages:
    - curl
    - git
    - cmake

pipeline:
  - env:
      PASS: demo
  - stage(Example):
    - tasks(ordered):
      - docker(container):
          title: Setup of sshd enabled Docker conainer
          background: yes
          script: |
            yum -y install openssh-server
            ssh-keygen -A
            echo "changing login password"
            echo "root:{{ env.PASS }}" | chpasswd
            echo "starting sshd process (in foreground mode) ..."
            /usr/sbin/sshd -D

      - shell:
          title: Trying to get ID of the Docker container when sshd is ready
          script: |
            {% raw %}
            ID=$(docker ps -a --filter="label=pipeline=${PIPELINE_PID}" --filter="label=pipeline-stage=${PIPELINE_STAGE}" --format="{{.ID}}")
            {% endraw %}
            IP=$(docker inspect ${ID} | jq -r '.[].NetworkSettings.IPAddress')

            ssh_error=0
            TRY=0
            while [ $TRY -lt 5 ]; do
              # sudo apt-get install sshpass
              sshpass -p "{{ env.PASS }}" \
                ssh -o StrictHostKeyChecking=no \
                    -o UserKnownHostsFile=/dev/null \
                    root@${IP} cat /etc/redhat-release > /dev/null 2>&1
              ssh_error=$?
              if [ ${ssh_error} -eq 0 ]; then
                  break
              fi
              sleep 10
              TRY=$((TRY + 1))
            done

            if [ ${ssh_error} -gt 0 ]; then
              exit ${ssh_error}
            else
              echo "$(docker inspect ${ID} | jq -r '.[].NetworkSettings.IPAddress')"
            fi
          variable: container_host

      - ansible(simple):
          inventory: |
             [all]
             localhost ansible_host={{ variables.container_host }} ansible_port=22 ansible_connection=ssh ansible_ssh_user=root ansible_ssh_pass={{ env.PASS }}
          limit: all
          script: |
            - hosts: all
              tasks:
                - name: Install packages
                  yum:
                    name: "{%raw%}{{ item }}{%endraw%}"
                    state: present
                  with_items:
                    {% for package in model.packages %}
                    - {{ package }}
                    {% endfor %}
