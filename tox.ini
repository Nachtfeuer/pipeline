[tox]
envlist = py27, py33, py34, py35, py36, py37, pypy, pypy3

[tool-test]
commands = 
    coverage erase
    coverage run    --omit={toxinidir}/.tox/*,{toxinidir}/tests/* --branch -m unittest discover -s {toxinidir}/tests -f -v
    coverage html   --title="Spline Code Coverage" --directory={toxinidir}/htmlcov
    coverage report --show-missing --fail-under=95

[tool-doctest]
commands = 
    bash -c "find {toxinidir}/spline -type f -name '*.py'|xargs -i python -m doctest \{\}"

[tool-radon]
commands =
    radon cc -a -nb --total-average --show-complexity spline tests
    bash -c "radon cc -a --xml spline > ccm.xml"

[tool-pep8]
commands = pep8 --max-line-length=110 --ignore=E731 spline tests

[tool-pep257]
commands = pep257 --count spline tests

[tool-flake8]
commands = flake8 --max-line-length=110 --max-complexity=6 --ignore=E731 spline tests

[tool-pylint]
commands = pylint --rcfile={toxinidir}/pylint.conf spline tests

[tool-bandit]
commands = bandit -r {toxinidir}/spline

[sphinx]
commands = make html

[apidoc]
commands =
    mkdir -p {toxinidir}/build/apidoc
    sphinx-apidoc \
        --ext-autodoc \
        --ext-doctest \
        --ext-mathjax \
         --output-dir={toxinidir}/build/apidoc \
        --separate \
        --force \
        --full \
        {toxinidir}/spline
    sed -i "s:'sphinx.ext.autodoc':'sphinx.ext.autodoc', 'sphinx.ext.napoleon':g" build/apidoc/conf.py
    sed -i "s:'sphinx.ext.autodoc':'sphinx.ext.autodoc', 'sphinx.ext.inheritance_diagram':g" build/apidoc/conf.py
    sed -i "s:'sphinx.ext.autodoc':'sphinx.ext.autodoc', 'sphinxcontrib.blockdiag':g" build/apidoc/conf.py
    make -C {toxinidir}/build/apidoc html

[epydoc]
commands =
    mkdir -p {toxinidir}/build/html
    epydoc --html --output={toxinidir}/build/html \
            --verbose --debug \
            --name="spline" \
            --show-frames \
            --graph=all \
            --show-private \
            --show-imports \
            spline

[package]
commands =
    python setup.py bdist_wheel --universal

[testenv]
passenv = MIN_COVERAGE INSIDE_DOCKER
whitelist_externals = bash
deps = -r{toxinidir}/requirements.txt
commands = 
    {envbindir}/python -V
    {[tool-radon]commands}
    {[tool-pep8]commands}
    {[tool-pep257]commands}
    {[tool-flake8]commands}
    {[tool-pylint]commands}
    {[tool-bandit]commands}
    {[tool-test]commands}
    {[package]commands}

[testenv:test]
passenv = MIN_COVERAGE INSIDE_DOCKER
deps = -r{toxinidir}/requirements.txt
commands = {[tool-test]commands}

[testenv:doctest]
whitelist_externals = bash
commands = {[tool-doctest]commands}

[testenv:radon]
whitelist_externals = bash
deps = -r{toxinidir}/requirements.txt
commands = {[tool-radon]commands}

[testenv:pep8]
deps = -r{toxinidir}/requirements.txt
commands = {[tool-pep8]commands}

[testenv:pep257]
deps = -r{toxinidir}/requirements.txt
commands = {[tool-pep257]commands}

[testenv:flake8]
deps = -r{toxinidir}/requirements.txt
commands = {[tool-flake8]commands}

[testenv:pylint]
deps = -r{toxinidir}/requirements.txt
commands = {[tool-pylint]commands}

[testenv:bandit]
deps = bandit
commands = {[tool-bandit]commands}

[testenv:sphinx]
deps = -r{toxinidir}/requirements.txt
changedir = {toxinidir}/docs
commands =
    {[sphinx]commands}

[testenv:epydoc]
whitelist_externals = mkdir
deps = -r{toxinidir}/requirements.txt
commands =
    {[epydoc]commands}


[testenv:apidoc]
setenv = PYTHONPATH = {toxinidir}
whitelist_externals =
    /bin/mkdir
    /bin/sed
    /usr/bin/make
deps = -r{toxinidir}/requirements.txt
commands =
    {[apidoc]commands}

[testenv:package]
deps = -r{toxinidir}/requirements.txt
commands =
    {[package]commands}
