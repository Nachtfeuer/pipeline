matrix:
  - name: Python 2.7
    env: {PYTHON_VERSION: py27}
    tags: ['py27']
  - name: Python 3.3
    env: {PYTHON_VERSION: py33}
    tags: ['py33']
  - name: Python 3.4
    env: {PYTHON_VERSION: py34}
    tags: ['py34']
  - name: Python 3.5
    env: {PYTHON_VERSION: py35}
    tags: ['py35']
  - name: Python 3.6
    env: {PYTHON_VERSION: py36}
    tags: ['py36']
  - name: Python 3.7
    env: {PYTHON_VERSION: py37}
    tags: ['py37']
  - name: PyPy (Python 2.7.x compatible)
    env: {PYTHON_VERSION: pypy}
    tags: ['pypy']
  - name: PyPy3 (Python 3.5.x compatible)
    env: {PYTHON_VERSION: pypy3}
    tags: ['pypy3']

model:
  templates:
    init_py27: |
      yum -y install centos-release-scl yum-utils git
      yum-config-manager --enable rhel-server-rhscl-7-rpms
      yum -y install python27
      scl enable python27 "bash -c \"pip install setuptools --upgrade\""
      scl enable python27 "bash -c \"pip install tox\""
      scl enable python27 "bash -c \"{{ env.PIPELINE_BASH_FILE }} RUN\""

    init_py33: |
      yum -y install centos-release-scl yum-utils git
      yum-config-manager --enable rhel-server-rhscl-7-rpms
      yum -y install python33
      scl enable python33 "bash -c \"easy_install pip\""
      scl enable python33 "bash -c \"pip install pip --upgrade\""
      scl enable python33 "bash -c \"pip install setuptools --upgrade\""
      scl enable python33 "bash -c \"pip install tox\""
      scl enable python33 "bash -c \"{{ env.PIPELINE_BASH_FILE }} RUN\""

    init_py34: |
      yum -y install centos-release-scl yum-utils git
      yum-config-manager --enable rhel-server-rhscl-7-rpms
      yum -y install rh-python34
      scl enable rh-python34 "bash -c \"pip install pip --upgrade\""
      scl enable rh-python34 "bash -c \"pip install setuptools --upgrade\""
      scl enable rh-python34 "bash -c \"pip install tox\""
      scl enable rh-python34 "bash -c \"{{ env.PIPELINE_BASH_FILE }} RUN\""

    init_py35: |
      yum -y install centos-release-scl yum-utils git
      yum-config-manager --enable rhel-server-rhscl-7-rpms
      yum -y install rh-python35
      scl enable rh-python35 "bash -c \"pip install pip --upgrade\""
      scl enable rh-python35 "bash -c \"pip install setuptools --upgrade\""
      scl enable rh-python35 "bash -c \"pip install tox\""
      scl enable rh-python35 "bash -c \"{{ env.PIPELINE_BASH_FILE }} RUN\""

    init_py36_compile: |
      yum -y install wget gcc make openssl-devel git
      wget -q https://www.python.org/ftp/python/3.6.4/Python-3.6.4.tar.xz
      tar -xf $(ls Python*.tar.xz)
      cd Python*
      ./configure
      make && make altinstall
      ln -s /usr/local/bin/pip3.6 /usr/local/bin/pip
      pip install pip --upgrade
      pip install setuptools --upgrade
      pip install tox
      {{ env.PIPELINE_BASH_FILE }} RUN

    init_py36: |
      # read here: https://janikarhunen.fi/how-to-install-python-3-6-1-on-centos-7.html
      yum -y install yum-utils git
      yum -y install https://centos7.iuscommunity.org/ius-release.rpm
      yum -y install python36u python36u-pip
      pip3.6 install tox
      {{ env.PIPELINE_BASH_FILE }} RUN

    init_py37: |
      yum -y install wget gcc make openssl-devel libffi-devel git
      wget -q https://www.python.org/ftp/python/3.7.0/Python-3.7.0a2.tar.xz
      tar -xf $(ls Python*.tar.xz)
      cd Python*
      ./configure
      make && make altinstall
      ln -s /usr/local/bin/pip3.7 /usr/local/bin/pip
      pip install pip --upgrade
      pip install setuptools --upgrade
      pip install tox
      {{ env.PIPELINE_BASH_FILE }} RUN

    init_pypy: |
      yum -y install wget bzip2 git
      echo "Downloading pypy (Python 2.7 compatible) ..."
      wget -q https://bitbucket.org/squeaky/portable-pypy/downloads/pypy-5.9-linux_x86_64-portable.tar.bz2
      echo "unpacking pypy (Python 2.7 compatible) to /opt ..."
      tar -xvjf $(ls pypy*.tar.bz2) -C /opt > /dev/null
      ln -s /opt/$(ls /opt|grep pypy) /opt/pypy
      ln -s /opt/pypy/bin/pypy /usr/local/bin/pypy
      ln -s /opt/pypy/bin/virtualenv-pypy /usr/local/bin/virtualenv
      pypy -m ensurepip
      ln -s /opt/pypy/bin/pip2 /usr/local/bin/pip
      pip install pip --upgrade
      pip install setuptools --upgrade
      pip install tox
      ln -s /opt/pypy/bin/tox /usr/local/bin/tox
      export PATH=$PATH:/opt/pypy/bin
      {{ env.PIPELINE_BASH_FILE }} RUN

    init_pypy3: |
      yum -y install wget bzip2 git
      echo "Downloading pypy (Python 3.5 compatible) ..."
      wget -q https://bitbucket.org/squeaky/portable-pypy/downloads/pypy3.5-5.9-beta-linux_x86_64-portable.tar.bz2
      echo "Unpacking pypy (Python 3.5 compatible) to /opt ..."
      tar -xvjf $(ls pypy3*.tar.bz2) -C /opt > /dev/null
      ln -s /opt/$(ls /opt|grep pypy) /opt/pypy
      ln -s /opt/pypy/bin/pypy /usr/local/bin/pypy
      ln -s /opt/pypy/bin/virtualenv-pypy /usr/local/bin/virtualenv
      pypy -m ensurepip
      ln -s /opt/pypy/bin/pip3 /usr/local/bin/pip
      pip install pip --upgrade
      pip install setuptools --upgrade
      pip install tox
      ln -s /opt/pypy/bin/tox /usr/local/bin/tox
      export PATH=$PATH:/opt/pypy/bin
      {{ env.PIPELINE_BASH_FILE }} RUN

pipeline:
  - env:
     INSIDE_DOCKER: "yes"
     MIN_COVERAGE: "92"

  - stage(Build):
    - tasks(ordered):
      - docker(container):
          mount: yes
          script: |
            case $1 in
              INIT)
                {{ model.templates['init_'+env.PYTHON_VERSION]|render(env=env) }}
                ;;
              RUN)
                mkdir /build

                # copying all files under version into the container
                pushd /mnt/host
                tar cvzf /build/spline.tar.gz $(git ls-files)
                popd

                pushd /build
                # unpacking the copied sources files
                tar xvzf spline.tar.gz
                rm -f spline.tar.gz
                # running the build
                tox -e {{ env.PYTHON_VERSION }}
                tox_error=$?
                popd
                exit ${tox_error}
                ;;
            esac
